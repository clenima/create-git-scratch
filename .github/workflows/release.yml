name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Validate semver tag and set version
        run: |
          # Extract version from git tag (remove 'v' prefix if present)
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          TAG_VERSION=${TAG_VERSION#v}

          # Strict semver validation
          if [[ ! $TAG_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Error: Tag '$TAG_VERSION' is not a valid semver format (X.Y.Z where X, Y, Z are numbers)"
            echo "Valid examples: v1.2.3, 1.2.3"
            echo "Invalid examples: v1.2, 1.2.3-alpha, 1.2.3.4"
            exit 1
          fi

          # Set version in package.json to match tag
          echo "✅ Valid semver tag: $TAG_VERSION"

      - name: Install
        run: bun install

      - name: Test
        run: bun run test

      - name: Build
        run: bun run build

      - name: Publish to npm
        run: bun publish --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}

            Package published to npm: `@clenima/create-git-scratch@${{ github.ref_name }}`
          draft: false
          prerelease: false

      - name: Discord notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
