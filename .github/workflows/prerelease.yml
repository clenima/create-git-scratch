name: Pre-Release

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/prerelease.yml'
      - 'package.json'
      - 'src/**/*.ts'
      - 'data/**/*.txt'
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  prerelease:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Git configurations
        run: |
          git config --local user.name ${{ github.actor }}
          git config --local user.email $(git --no-pager show --format="<%ae>" -s HEAD)

      - name: Auto-bump version with semver
        run: |
          # Get current version
          CURRENT_VERSION=$(bun pm pkg get version)
          TIMESTAMP_META=$(date +%Y.%j).$(( $(date +%s) % 86400 ))

          NEW_VERSION=$(bun pm version prerelease --preid=$TIMESTAMP_META --message="%s [ci skip]")
          echo "Bumped version to: $NEW_VERSION"

      - name: Install
        run: bun install

      - name: Test
        run: bun run test

      - name: Build
        run: bun run build

      - name: Publish to npm
        run: bun publish --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version update
        run: |
          if ! git status | grep -q "working tree clean"; then
            git push
          fi

      - name: Discord notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
